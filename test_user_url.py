#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º URL –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

import asyncio
import aiohttp
from parser.daft_parser import DaftParser

async def test_specific_url():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä—Å–µ—Ä –Ω–∞ URL –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    url = "http://www.daft.ie/for-rent/house-28-cabra-drive-dublin-7-north-circular-road-dublin-7/6193753"
    
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä—Å–µ—Ä –Ω–∞ URL –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    print(f"üîó {url}")
    print("="*80)
    
    parser = DaftParser()
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–µ—Ç–æ–¥ –ø–∞—Ä—Å–µ—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π
        property_details = await parser.get_property_info(url)
        
        if property_details:
            print("‚úÖ –£–°–ü–ï–•! –û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ:")
            print(f"üìÑ –ù–∞–∑–≤–∞–Ω–∏–µ: {property_details.title}")
            print(f"üí∞ –¶–µ–Ω–∞: ‚Ç¨{property_details.price:,}/month")
            print(f"üõèÔ∏è –°–ø–∞–ª—å–Ω–∏: {property_details.bedrooms}")
            print(f"üöø –í–∞–Ω–Ω—ã–µ: {property_details.bathrooms}")
            print(f"üè† –¢–∏–ø: {property_details.property_type}")
            print(f"üìç –ê–¥—Ä–µ—Å: {property_details.address}")
            print(f"üîó URL: {property_details.url}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–∞—à–∏–º —Ñ–∏–ª—å—Ç—Ä–∞–º
            print(f"\nüéØ –ü–†–û–í–ï–†–ö–ê –§–ò–õ–¨–¢–†–û–í:")
            print(f"üí∞ –¶–µ–Ω–∞ ‚Ç¨{property_details.price:,} <= ‚Ç¨2500? {'‚úÖ' if property_details.price <= 2500 else '‚ùå'}")
            print(f"üõèÔ∏è –°–ø–∞–ª—å–Ω–∏ {property_details.bedrooms} >= 3? {'‚úÖ' if property_details.bedrooms >= 3 else '‚ùå'}")
            
            if property_details.price <= 2500 and property_details.bedrooms >= 3:
                print(f"\nüéâ –û–ë–™–Ø–í–õ–ï–ù–ò–ï –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢ –§–ò–õ–¨–¢–†–ê–ú!")
                print(f"   –≠—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ –∏—â–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: 3+ —Å–ø–∞–ª—å–Ω–∏ –∑–∞ ‚Ç¨2500")
            else:
                print(f"\n‚ùå –û–±—ä—è–≤–ª–µ–Ω–∏–µ –ù–ï —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞–º")
                
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    await parser.close()

if __name__ == "__main__":
    asyncio.run(test_specific_url())
