#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä –±–æ—Ç–∞
"""

import sys
from pathlib import Path
sys.path.insert(0, str(Path(__file__).parent))

from bot.enhanced_keyboards import (
    get_main_menu_keyboard, get_settings_menu_keyboard, 
    get_regions_menu_keyboard, get_add_region_categories_keyboard
)

def test_keyboards():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    
    print("="*60)
    print("‚å®Ô∏è –¢–ï–°–¢ –ö–õ–ê–í–ò–ê–¢–£–† –ë–û–¢–ê")
    print("="*60)
    
    keyboards = [
        ("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", get_main_menu_keyboard()),
        ("–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫", get_settings_menu_keyboard()),
        ("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–≥–∏–æ–Ω–∞–º–∏", get_regions_menu_keyboard()),
        ("–î–æ–±–∞–≤–∏—Ç—å —Ä–µ–≥–∏–æ–Ω", get_add_region_categories_keyboard())
    ]
    
    for name, keyboard in keyboards:
        print(f"\nüîπ {name}:")
        print("-" * 40)
        
        for i, row in enumerate(keyboard.inline_keyboard):
            print(f"  –†—è–¥ {i+1}: ", end="")
            buttons = []
            for button in row:
                buttons.append(f"[{button.text}]")
            print(" | ".join(buttons))
        
        total_buttons = sum(len(row) for row in keyboard.inline_keyboard)
        print(f"  üìä –í—Å–µ–≥–æ –∫–Ω–æ–ø–æ–∫: {total_buttons}")
        print(f"  üìä –†—è–¥–æ–≤: {len(keyboard.inline_keyboard)}")
    
    print("\n" + "="*60)
    print("‚úÖ –¢–ï–°–¢ –ö–õ–ê–í–ò–ê–¢–£–† –ó–ê–í–ï–†–®–ï–ù!")
    print("="*60)

def check_button_texts():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å"""
    print("\nüîç –ê–ù–ê–õ–ò–ó –¢–ï–ö–°–¢–û–í –ö–ù–û–ü–û–ö:")
    print("-" * 50)
    
    main_keyboard = get_main_menu_keyboard()
    settings_keyboard = get_settings_menu_keyboard()
    
    all_buttons = []
    for keyboard in [main_keyboard, settings_keyboard]:
        for row in keyboard.inline_keyboard:
            for button in row:
                all_buttons.append(button.text)
    
    print("üìã –í—Å–µ —Ç–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫:")
    for i, text in enumerate(all_buttons, 1):
        print(f"  {i:2d}. {text}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ emoji
    emoji_count = sum(1 for text in all_buttons if any(ord(char) > 127 for char in text))
    print(f"\nüìä –ö–Ω–æ–ø–æ–∫ —Å emoji: {emoji_count}/{len(all_buttons)}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã —Ç–µ–∫—Å—Ç–æ–≤
    max_length = max(len(text) for text in all_buttons)
    min_length = min(len(text) for text in all_buttons)
    avg_length = sum(len(text) for text in all_buttons) / len(all_buttons)
    
    print(f"üìè –î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–æ–≤ –∫–Ω–æ–ø–æ–∫:")
    print(f"  –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è: {max_length} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"  –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è: {min_length} —Å–∏–º–≤–æ–ª–æ–≤")
    print(f"  –°—Ä–µ–¥–Ω—è—è: {avg_length:.1f} —Å–∏–º–≤–æ–ª–æ–≤")

if __name__ == "__main__":
    test_keyboards()
    check_button_texts()
