#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã - –æ—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –∏ –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫
"""
import asyncio
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/home/barss/PycharmProjects/daftparser')

from bot.handlers import TelegramBot
from database.database import Database
from parser.demo_parser import DemoParser
from parser.models import SearchFilters, BotSettings
from aiogram import Bot
from config.settings import settings

async def demo_fresh_search():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Å–≤–µ–∂–∏–π –ø–æ–∏—Å–∫ —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –æ–±—ä—è–≤–ª–µ–Ω–∏–π"""
    try:
        print("üßπ –û—á–∏—â–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏...")
        
        # –£–¥–∞–ª—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        db_path = "./data/daftbot.db"
        if os.path.exists(db_path):
            os.remove(db_path)
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        database = Database()
        await database.init_database()
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞ (–±–æ–ª–µ–µ –º—è–≥–∫–∏–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)
        chat_id = "-1002819366953"
        filters = SearchFilters(
            city="Dublin",
            max_price=3000,  # –£–≤–µ–ª–∏—á–∏–ª–∏ –ª–∏–º–∏—Ç
            min_bedrooms=2,  # –°–Ω–∏–∑–∏–ª–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –ø–æ —Å–ø–∞–ª—å–Ω—è–º
            areas=[]  # –£–±—Ä–∞–ª–∏ —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ä–∞–π–æ–Ω–∞–º
        )
        
        # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞
        bot_settings = BotSettings(
            chat_id=chat_id,
            city=filters.city,
            max_price=filters.max_price,
            min_bedrooms=filters.min_bedrooms,
            areas=filters.areas,
            is_monitoring=True
        )
        await database.save_bot_settings(bot_settings)
        
        print("üîç –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å –¥–µ–º–æ-–ø–∞—Ä—Å–µ—Ä–æ–º...")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–ø–∞—Ä—Å–µ—Ä
        demo_parser = DemoParser()
        properties = await demo_parser.search_properties(filters)
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π: {len(properties)}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É
        if properties:
            bot = Bot(token=settings.TELEGRAM_BOT_TOKEN)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await bot.send_message(
                chat_id=chat_id,
                text="üéâ <b>–ù–æ–≤—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –æ—Ç Daft.ie Bot!</b>\n\n"
                     f"–ù–∞–π–¥–µ–Ω–æ <b>{len(properties)}</b> –Ω–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ –≤–∞—à–∏–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º:\n"
                     f"‚Ä¢ üìç {filters.city}\n"
                     f"‚Ä¢ üí∞ –î–æ ‚Ç¨{filters.max_price}/–º–µ—Å—è—Ü\n"
                     f"‚Ä¢ üõèÔ∏è {filters.min_bedrooms}+ —Å–ø–∞–ª–µ–Ω\n"
                     f"‚Ä¢ üó∫Ô∏è –†–∞–π–æ–Ω—ã: {', '.join(filters.areas[:3])}{'...' if len(filters.areas) > 3 else ''}\n\n"
                     "–û–±—ä—è–≤–ª–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∏–∂–µ:",
                parse_mode="HTML"
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
            for i, prop in enumerate(properties, 1):
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
                await database.save_property(prop)
                await database.mark_property_sent(prop.url, chat_id)
                
                # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                message_text = (
                    f"üè† <b>{prop.title}</b>\n\n"
                    f"üìç <b>–ê–¥—Ä–µ—Å:</b> {prop.address}\n"
                    f"üõèÔ∏è <b>–°–ø–∞–ª—å–Ω–∏:</b> {prop.format_bedrooms()}\n"
                    f"üí∞ <b>–¶–µ–Ω–∞:</b> {prop.format_price()}\n"
                )
                
                if prop.bathrooms:
                    message_text += f"üöø <b>–í–∞–Ω–Ω—ã–µ:</b> {prop.bathrooms}\n"
                
                if prop.area:
                    message_text += f"üó∫Ô∏è <b>–†–∞–π–æ–Ω:</b> {prop.area}\n"
                
                if prop.description:
                    desc = prop.description[:200] + "..." if len(prop.description) > 200 else prop.description
                    message_text += f"\nüìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {desc}\n"
                
                message_text += f"\nüîó <a href='{prop.url}'>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</a>"
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                await bot.send_message(
                    chat_id=chat_id,
                    text=message_text,
                    parse_mode="HTML",
                    disable_web_page_preview=False
                )
                
                print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {i}/{len(properties)}: {prop.title[:50]}...")
                
                # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
                await asyncio.sleep(1)
            
            # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await bot.send_message(
                chat_id=chat_id,
                text="‚úÖ <b>–ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à—ë–Ω!</b>\n\n"
                     "–ë–æ—Ç –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –Ω–æ–≤—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç—ã.\n"
                     "–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                     "‚Ä¢ /settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞\n"
                     "‚Ä¢ /status - –°—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞\n"
                     "‚Ä¢ /stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                parse_mode="HTML"
            )
            
            await bot.session.close()
            print(f"üéâ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {len(properties)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø—É!")
        else:
            print("‚ÑπÔ∏è –û–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        if hasattr(database, 'close'):
            await database.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã Daft.ie Telegram Bot")
    print("=" * 50)
    asyncio.run(demo_fresh_search())
