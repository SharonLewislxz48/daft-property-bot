#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram
"""

import re
import tkinter as tk
from tkinter import messagebox, scrolledtext
from dataclasses import dataclass
from typing import Optional

@dataclass
class PropertyListing:
    """–î–∞–Ω–Ω—ã–µ –æ–± –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏"""
    title: str
    address: str
    price: str
    bedrooms: str
    url: str
    user: str

class TelegramParser:
    """–ü–∞—Ä—Å–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏–π Telegram"""
    
    def __init__(self):
        self.property_pattern = re.compile(
            r'üè†\s+(.+?)\n\nüìç\s+–ê–¥—Ä–µ—Å:\s+(.+?)\nüí∞\s+–¶–µ–Ω–∞:\s+(.+?)\nüõèÔ∏è\s+–°–ø–∞–ª—å–Ω–∏:\s+(.+?)\n\nüîó\s+.*?\((https://www\.daft\.ie/[^)]+)\)\s*\n\nüë§\s+–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\s+(.+)',
            re.MULTILINE | re.DOTALL
        )
    
    def parse_property_message(self, text: str) -> Optional[PropertyListing]:
        """–ü–∞—Ä—Å–∏–Ω–≥ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ–º"""
        match = self.property_pattern.search(text)
        if match:
            return PropertyListing(
                title=match.group(1).strip(),
                address=match.group(2).strip(),
                price=match.group(3).strip(),
                bedrooms=match.group(4).strip(),
                url=match.group(5).strip(),
                user=match.group(6).strip()
            )
        return None

class TestApp:
    """–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä—Å–∏–Ω–≥–∞"""
    
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("–¢–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ Telegram —Å–æ–æ–±—â–µ–Ω–∏–π")
        self.root.geometry("800x600")
        
        self.parser = TelegramParser()
        self.setup_ui()
    
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = tk.Label(self.root, text="–¢–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏–π Daft.ie", 
                              font=('Arial', 16, 'bold'))
        title_label.pack(pady=10)
        
        # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
        instruction = tk.Label(self.root, 
                              text="–í—Å—Ç–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ Telegram –≤ –ø–æ–ª–µ –Ω–∏–∂–µ –∏ –Ω–∞–∂–º–∏—Ç–µ '–ü–∞—Ä—Å–∏—Ç—å'",
                              font=('Arial', 10))
        instruction.pack(pady=5)
        
        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞
        tk.Label(self.root, text="–ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:", font=('Arial', 12, 'bold')).pack(anchor='w', padx=10)
        self.text_input = scrolledtext.ScrolledText(self.root, height=10, width=90)
        self.text_input.pack(padx=10, pady=5, fill='both', expand=True)
        
        # –ü—Ä–∏–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è
        example_text = """üè† 4 Grosvenor Lodge, Dublin 6, Rathmines, Dublin 6

üìç –ê–¥—Ä–µ—Å: Rathmines,  Dublin 6
üí∞ –¶–µ–Ω–∞: ‚Ç¨2,182
üõèÔ∏è –°–ø–∞–ª—å–Ω–∏: 4 —Å–ø–∞–ª–µ–Ω

üîó –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ (https://www.daft.ie/for-rent/house-4-grosvenor-lodge-dublin-6-rathmines-dublin-6/6166624)


üë§ –û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @Barss20"""
        
        self.text_input.insert('1.0', example_text)
        
        # –ö–Ω–æ–ø–∫–∏
        button_frame = tk.Frame(self.root)
        button_frame.pack(pady=10)
        
        parse_button = tk.Button(button_frame, text="üîç –ü–∞—Ä—Å–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", 
                               command=self.parse_message, bg='#4CAF50', fg='white',
                               font=('Arial', 12, 'bold'), padx=20, pady=5)
        parse_button.pack(side='left', padx=5)
        
        clear_button = tk.Button(button_frame, text="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å", 
                               command=self.clear_text, bg='#f44336', fg='white',
                               font=('Arial', 12, 'bold'), padx=20, pady=5)
        clear_button.pack(side='left', padx=5)
        
        # –†–µ–∑—É–ª—å—Ç–∞—Ç
        tk.Label(self.root, text="–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–∞—Ä—Å–∏–Ω–≥–∞:", font=('Arial', 12, 'bold')).pack(anchor='w', padx=10, pady=(20,0))
        self.result_text = scrolledtext.ScrolledText(self.root, height=8, width=90, state='disabled')
        self.result_text.pack(padx=10, pady=5, fill='both')
    
    def parse_message(self):
        """–ü–∞—Ä—Å–∏–Ω–≥ –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        text = self.text_input.get('1.0', tk.END).strip()
        if not text:
            messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è")
            return
        
        # –ü–∞—Ä—Å–∏–Ω–≥
        property_listing = self.parser.parse_property_message(text)
        
        # –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        self.result_text.config(state='normal')
        self.result_text.delete('1.0', tk.END)
        
        if property_listing:
            result = f"""‚úÖ –°–û–û–ë–©–ï–ù–ò–ï –£–°–ü–ï–®–ù–û –†–ê–°–ü–û–ó–ù–ê–ù–û

üè† –ù–∞–∑–≤–∞–Ω–∏–µ: {property_listing.title}
üìç –ê–¥—Ä–µ—Å: {property_listing.address}
üí∞ –¶–µ–Ω–∞: {property_listing.price}
üõèÔ∏è –°–ø–∞–ª—å–Ω–∏: {property_listing.bedrooms}
üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {property_listing.user}
üîó URL: {property_listing.url}

‚ú® –ì–æ—Ç–æ–≤–æ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏!"""
            
            self.result_text.insert('1.0', result)
            
            # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ
            if messagebox.askyesno("–û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ", 
                                 f"–û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ!\n\n–û—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ?\n\n{property_listing.url}"):
                import webbrowser
                webbrowser.open(property_listing.url)
        else:
            result = """‚ùå –°–û–û–ë–©–ï–ù–ò–ï –ù–ï –†–ê–°–ü–û–ó–ù–ê–ù–û

–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
‚Ä¢ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (üè†, üìç, üí∞, üõèÔ∏è, üîó, üë§)
‚Ä¢ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ daft.ie

–û–∂–∏–¥–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç:
üè† [–ù–∞–∑–≤–∞–Ω–∏–µ]

üìç –ê–¥—Ä–µ—Å: [–∞–¥—Ä–µ—Å]
üí∞ –¶–µ–Ω–∞: [—Ü–µ–Ω–∞]
üõèÔ∏è –°–ø–∞–ª—å–Ω–∏: [–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ]

üîó –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ (https://www.daft.ie/...)

üë§ –û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @username"""
            
            self.result_text.insert('1.0', result)
        
        self.result_text.config(state='disabled')
    
    def clear_text(self):
        """–û—á–∏—Å—Ç–∫–∞ –ø–æ–ª–µ–π"""
        self.text_input.delete('1.0', tk.END)
        self.result_text.config(state='normal')
        self.result_text.delete('1.0', tk.END)
        self.result_text.config(state='disabled')
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.root.mainloop()

if __name__ == "__main__":
    print("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ø–∞—Ä—Å–µ—Ä–∞")
    print("üìù –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π")
    
    app = TestApp()
    app.run()
