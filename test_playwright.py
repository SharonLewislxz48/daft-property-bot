#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Playwright –ø–∞—Ä—Å–µ—Ä–∞
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, str(Path(__file__).parent))

async def test_playwright_parser():
    """–¢–µ—Å—Ç Playwright –ø–∞—Ä—Å–µ—Ä–∞"""
    try:
        print("üé≠ –¢–µ—Å—Ç–∏—Ä—É–µ–º Playwright –ø–∞—Ä—Å–µ—Ä...")
        
        from parser.playwright_parser import PlaywrightDaftParser
        from parser.models import SearchFilters
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
        filters = SearchFilters(
            city="Dublin",
            max_price=3000,  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
            min_bedrooms=2,  # –£–º–µ–Ω—å—à–∞–µ–º –¥–ª—è –±–æ–ª—å—à–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            areas=["Dublin 1", "Dublin 2"]
        )
        
        print(f"‚úÖ –§–∏–ª—å—Ç—Ä—ã: {filters}")
        
        async with PlaywrightDaftParser() as parser:
            print("‚úÖ Playwright –ø–∞—Ä—Å–µ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
            
            # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –±–∞–∑–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ–∏—Å–∫–∞
            base_url = "https://www.daft.ie/property-for-rent/dublin"
            print(f"üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫: {base_url}")
            
            content = await parser._get_page_content(base_url)
            
            if content:
                print(f"‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞! –†–∞–∑–º–µ—Ä: {len(content)} —Å–∏–º–≤–æ–ª–æ–≤")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
                if "dublin" in content.lower() and "rent" in content.lower():
                    print("‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ")
                    
                    # –ü—Ä–æ–±—É–µ–º –ø–æ–∏—Å–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π
                    print("üîç –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–∏—Å–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π...")
                    properties = await parser.search_properties(filters, max_pages=1)
                    
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π: {len(properties)}")
                    
                    if properties:
                        print("\nüìã –ü–µ—Ä–≤—ã–µ 3 –æ–±—ä—è–≤–ª–µ–Ω–∏—è:")
                        for i, prop in enumerate(properties[:3], 1):
                            print(f"   {i}. {prop.title}")
                            print(f"      üí∞ {prop.format_price()}")
                            print(f"      üõèÔ∏è {prop.format_bedrooms()}")
                            print(f"      üìç {prop.address}")
                            print(f"      üîó {prop.url}")
                            print()
                    else:
                        print("   ‚ÑπÔ∏è –û–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ñ–∏–ª—å—Ç—Ä–∞–º")
                        print("   üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã (—É–≤–µ–ª–∏—á–∏—Ç—å —Ü–µ–Ω—É, —É–º–µ–Ω—å—à–∏—Ç—å —Å–ø–∞–ª—å–Ω–∏)")
                else:
                    print("‚ö†Ô∏è –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_playwright_parser())
