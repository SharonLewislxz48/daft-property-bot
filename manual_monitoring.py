#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/home/barss/PycharmProjects/daftparser')

from bot.handlers import TelegramBot
from database.database import Database
from parser.daft_parser import DaftParser
from parser.demo_parser import DemoParser
from parser.models import SearchFilters

async def run_single_monitoring_cycle():
    """–ó–∞–ø—É—Å–∫–∞–µ–º –æ–¥–∏–Ω —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        database = Database()
        await database.init_database()
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞
        chat_id = "-1002819366953"
        bot_settings = await database.get_bot_settings(chat_id)
        if not bot_settings:
            # –°–æ–∑–¥–∞—ë–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            filters = SearchFilters(
                city="Dublin",
                max_price=2500,
                min_bedrooms=3,
                areas=["Temple Bar", "Dublin 2", "Dublin 4"]
            )
            await database.save_bot_settings(chat_id, filters, is_monitoring=True)
            bot_settings = await database.get_bot_settings(chat_id)
        
        print(f"üîç –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π...")
        
        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –¥–µ–º–æ-–ø–∞—Ä—Å–µ—Ä –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        try:
            print("üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–ø–∞—Ä—Å–µ—Ä –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏...")
            demo_parser = DemoParser()
            properties = await demo_parser.search_properties(bot_settings.get_search_filters())
            print(f"‚úÖ –î–µ–º–æ-–ø–∞—Ä—Å–µ—Ä: –Ω–∞–π–¥–µ–Ω–æ {len(properties)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ-–ø–∞—Ä—Å–µ—Ä–∞: {e}")
            # –ü—Ä–æ–±—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä—Å–µ—Ä
            try:
                parser = DaftParser()
                properties = await parser.search_properties(bot_settings.get_search_filters())
                print(f"‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä—Å–µ—Ä: –Ω–∞–π–¥–µ–Ω–æ {len(properties)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π")
            except Exception as e2:
                print(f"‚ö†Ô∏è –û—Å–Ω–æ–≤–Ω–æ–π –ø–∞—Ä—Å–µ—Ä —Ç–∞–∫–∂–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e2}")
                properties = []
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
        new_properties = []
        for prop in properties:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ª–∏ —É–∂–µ —ç—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≤ —ç—Ç–æ—Ç —á–∞—Ç
            if not await database.is_property_sent(prop.url, chat_id):
                # –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
                await database.save_property(prop)
                # –ü–æ—Ç–æ–º –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ
                await database.mark_property_sent(prop.url, chat_id)
                new_properties.append(prop)
        
        print(f"üÜï –ù–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π: {len(new_properties)}")
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–æ–≤—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Ö
        if new_properties:
            from aiogram import Bot
            from config.settings import settings
            
            def format_property_message(property_obj):
                """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ–±—ä—è–≤–ª–µ–Ω–∏–∏"""
                message_text = (
                    f"üè† <b>{property_obj.title}</b>\n\n"
                    f"üìç <b>–ê–¥—Ä–µ—Å:</b> {property_obj.address}\n"
                    f"üõèÔ∏è <b>–°–ø–∞–ª—å–Ω–∏:</b> {property_obj.format_bedrooms()}\n"
                    f"üí∞ <b>–¶–µ–Ω–∞:</b> {property_obj.format_price()}\n"
                )
                
                if property_obj.bathrooms:
                    message_text += f"üöø <b>–í–∞–Ω–Ω—ã–µ:</b> {property_obj.bathrooms}\n"
                
                if property_obj.area:
                    message_text += f"üó∫Ô∏è <b>–†–∞–π–æ–Ω:</b> {property_obj.area}\n"
                
                if property_obj.description:
                    desc = property_obj.description[:200] + "..." if len(property_obj.description) > 200 else property_obj.description
                    message_text += f"\nüìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {desc}\n"
                
                message_text += f"\nüîó <a href='{property_obj.url}'>–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</a>"
                
                return message_text
            
            bot = Bot(token=settings.TELEGRAM_BOT_TOKEN)
            
            for prop in new_properties:
                message = format_property_message(prop)
                await bot.send_message(
                    chat_id=bot_settings.chat_id,
                    text=message,
                    parse_mode="HTML",
                    disable_web_page_preview=False
                )
                print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {prop.title[:50]}...")
            
            await bot.session.close()
            
            print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {len(new_properties)} –Ω–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤ –≥—Ä—É–ø–ø—É!")
        else:
            print("‚ÑπÔ∏è –ù–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        if hasattr(database, 'close'):
            await database.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(run_single_monitoring_cycle())
