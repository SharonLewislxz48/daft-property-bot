#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ç–æ–∫–µ–Ω–∞ Telegram –±–æ—Ç–∞
"""
import asyncio
import logging
from aiogram import Bot
from config.settings import settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def test_token():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞"""
    try:
        logger.info(f"–¢–æ–∫–µ–Ω: {settings.TELEGRAM_BOT_TOKEN[:10]}...")
        logger.info(f"Chat ID: {settings.CHAT_ID}")
        
        # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
        bot = Bot(token=settings.TELEGRAM_BOT_TOKEN)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        bot_info = await bot.get_me()
        logger.info(f"‚úÖ –ë–æ—Ç –Ω–∞–π–¥–µ–Ω: @{bot_info.username} ({bot_info.first_name})")
        
        # –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            message = await bot.send_message(
                chat_id=settings.CHAT_ID,
                text="ü§ñ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Daft.ie Bot\n\n‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!"
            )
            logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {settings.CHAT_ID}")
            logger.info(f"Message ID: {message.message_id}")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
            if "chat not found" in str(e).lower():
                logger.error("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å CHAT_ID")
            elif "bot was blocked" in str(e).lower():
                logger.error("–ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –≤ —á–∞—Ç–µ")
        
        await bot.session.close()
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        if "token" in str(e).lower():
            logger.error("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å TELEGRAM_BOT_TOKEN")

if __name__ == "__main__":
    asyncio.run(test_token())
