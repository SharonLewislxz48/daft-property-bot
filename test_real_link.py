#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏ daft.ie
"""
import asyncio
import aiohttp
from bs4 import BeautifulSoup

async def test_real_link():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ"""
    print("üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ...")
    
    # –ë–µ—Ä–µ–º –æ–¥–Ω—É –∏–∑ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
    test_url = "https://www.daft.ie/for-rent/apartment-1-bed-apartment-eglinton-place-eglinton-road-dublin-4/5811432"
    
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
        'Accept-Language': 'en-IE,en;q=0.9',
        'Referer': 'https://www.daft.ie/'
    }
    
    async with aiohttp.ClientSession(headers=headers) as session:
        try:
            print(f"üìã –¢–µ—Å—Ç–∏—Ä—É–µ–º: {test_url}")
            
            async with session.get(test_url) as response:
                print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status}")
                
                if response.status == 200:
                    content = await response.text()
                    print(f"‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞: {len(content)} —Å–∏–º–≤–æ–ª–æ–≤")
                    
                    soup = BeautifulSoup(content, 'html.parser')
                    
                    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                    title = soup.find('title')
                    if title:
                        print(f"üì∞ –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title.get_text()}")
                    
                    # –ò—â–µ–º —Ü–µ–Ω—É
                    price_elements = soup.find_all(text=lambda text: text and '‚Ç¨' in text)
                    if price_elements:
                        print(f"üí∞ –ù–∞–π–¥–µ–Ω—ã —Ü–µ–Ω—ã: {price_elements[:3]}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ —Ä–µ–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
                    if 'apartment' in content.lower() or 'property' in content.lower():
                        print("‚úÖ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–û: –≠—Ç–æ —Ä–µ–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è!")
                        return True
                    else:
                        print("‚ö†Ô∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –Ω–æ –Ω–µ –ø–æ—Ö–æ–∂–∞ –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ")
                        return False
                        
                elif response.status == 404:
                    print("‚ùå 404 - –û–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ (–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–µ–Ω–æ)")
                    return False
                else:
                    print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status}")
                    return False
                    
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            return False

if __name__ == "__main__":
    success = asyncio.run(test_real_link())
    
    if success:
        print("\nüéâ –°–°–´–õ–ö–ê –†–ï–ê–õ–¨–ù–ê–Ø –ò –†–ê–ë–û–¢–ê–ï–¢!")
    else:
        print("\n‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å–æ —Å—Å—ã–ª–∫–æ–π")
