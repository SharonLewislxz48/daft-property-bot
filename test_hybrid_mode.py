#!/usr/bin/env python3
"""
–ì–∏–±—Ä–∏–¥–Ω—ã–π —Ä–µ–∂–∏–º: –ü–æ–ø—ã—Ç–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö + —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
"""
import asyncio
from aiogram import Bot
import sys
sys.path.append('/home/barss/PycharmProjects/daftparser')

from parser.daft_parser import DaftParser
from parser.demo_parser import DemoParser
from parser.models import SearchFilters
from config.settings import settings

async def test_real_data_with_notification():
    """–¢–µ—Å—Ç —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –æ —Å—Ç–∞—Ç—É—Å–µ –¥–∞–Ω–Ω—ã—Ö"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –†–ï–ê–õ–¨–ù–´–• –¥–∞–Ω–Ω—ã—Ö...")
    
    filters = SearchFilters(
        city="Dublin",
        max_price=3000,
        min_bedrooms=2,
        areas=[]
    )
    
    # –ü—Ä–æ–±—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    parser = DaftParser()
    try:
        properties = await parser.search_properties(filters)
        
        if properties:
            print(f"‚úÖ –£–°–ü–ï–•! –ü–æ–ª—É—á–µ–Ω–æ {len(properties)} –†–ï–ê–õ–¨–ù–´–• –æ–±—ä—è–≤–ª–µ–Ω–∏–π")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
            bot = Bot(token=settings.TELEGRAM_BOT_TOKEN)
            await bot.send_message(
                chat_id=settings.CHAT_ID,
                text="üåê <b>–†–ï–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï –î–û–°–¢–£–ü–ù–´!</b>\n\n"
                     f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ <b>{len(properties)}</b> –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π —Å Daft.ie\n"
                     "üéØ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏",
                parse_mode="HTML"
            )
            await bot.session.close()
            return True
            
    except Exception as e:
        print(f"‚ùå –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã: {e}")
    
    # –ï—Å–ª–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã - —É–≤–µ–¥–æ–º–ª—è–µ–º –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ
    print("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –¥–µ–º–æ-—Ä–µ–∂–∏–º...")
    
    demo_parser = DemoParser()
    demo_properties = await demo_parser.search_properties(filters)
    
    if demo_properties:
        print(f"üé≠ –î–µ–º–æ-—Ä–µ–∂–∏–º: {len(demo_properties)} —Ç–µ—Å—Ç–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Å—Ç–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        bot = Bot(token=settings.TELEGRAM_BOT_TOKEN)
        await bot.send_message(
            chat_id=settings.CHAT_ID,
            text="‚ö†Ô∏è <b>–í–ù–ò–ú–ê–ù–ò–ï: –î–ï–ú–û-–†–ï–ñ–ò–ú</b>\n\n"
                 "üõ°Ô∏è –°–∞–π—Ç Daft.ie –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã\n"
                 "üé≠ –û—Ç–ø—Ä–∞–≤–ª—è—é –¢–ï–°–¢–û–í–´–ï –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏\n\n"
                 "üí° <b>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:</b>\n"
                 "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ VPN\n"
                 "‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø—Ä–æ–∫—Å–∏\n"
                 "‚Ä¢ –£–º–µ–Ω—å—à–∏—Ç–µ —á–∞—Å—Ç–æ—Ç—É –∑–∞–ø—Ä–æ—Å–æ–≤\n\n"
                 f"üìä –¢–µ—Å—Ç–æ–≤—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π: <b>{len(demo_properties)}</b>",
            parse_mode="HTML"
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–µ–º–æ-–æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å –ø–æ–º–µ—Ç–∫–æ–π
        for prop in demo_properties[:2]:
            message = (
                f"üé≠ <b>[–î–ï–ú–û] {prop.title}</b>\n\n"
                f"üìç <b>–ê–¥—Ä–µ—Å:</b> {prop.address}\n"
                f"üõèÔ∏è <b>–°–ø–∞–ª—å–Ω–∏:</b> {prop.format_bedrooms()}\n"
                f"üí∞ <b>–¶–µ–Ω–∞:</b> {prop.format_price()}\n\n"
                f"‚ö†Ô∏è <i>–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏</i>\n"
                f"üîó <a href='{prop.url}'>–î–µ–º–æ-—Å—Å—ã–ª–∫–∞</a>"
            )
            
            await bot.send_message(
                chat_id=settings.CHAT_ID,
                text=message,
                parse_mode="HTML"
            )
        
        await bot.session.close()
        return False

if __name__ == "__main__":
    print("üéØ –ì–ò–ë–†–ò–î–ù–´–ô –†–ï–ñ–ò–ú: –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ + —á–µ—Å—Ç–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    print("=" * 60)
    
    success = asyncio.run(test_real_data_with_notification())
    
    if success:
        print("\n‚úÖ –°—Ç–∞—Ç—É—Å: –†–ï–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï —Ä–∞–±–æ—Ç–∞—é—Ç")
        print("üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ó–∞–ø—É—Å–∫–∞–π—Ç–µ –±–æ—Ç–∞ –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ")
    else:
        print("\n‚ö†Ô∏è –°—Ç–∞—Ç—É—Å: –°–∞–π—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ")
        print("üé≠ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ VPN –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
