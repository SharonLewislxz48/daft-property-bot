#!/usr/bin/env python3
"""
–û—Ç–ø—Ä–∞–≤–∫–∞ –†–ï–ê–õ–¨–ù–´–• –¥–∞–Ω–Ω—ã—Ö –≤ Telegram –≥—Ä—É–ø–ø—É
"""
import asyncio
import sys
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/home/barss/PycharmProjects/daftparser')

from aiogram import Bot
from parser.daft_parser import DaftParser
from parser.models import SearchFilters
from datetime import datetime

async def send_real_data_to_telegram():
    print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –†–ï–ê–õ–¨–ù–´–ï –¥–∞–Ω–Ω—ã–µ –≤ Telegram...")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    bot_token = "8219994646:AAEJMZGow2b_F4OcTQBqGqZp0-8baLVnatQ"
    chat_id = "-1002819366953"
    
    # –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞
    bot = Bot(token=bot_token)
    
    # –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã (–ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º –∞–Ω–∞–ª–∏–∑–∞)
    filters = SearchFilters(
        city='Dublin',
        max_price=3000,  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±—é–¥–∂–µ—Ç
        min_bedrooms=2,  # –°–Ω–∏–∂–∞–µ–º –¥–æ 2 —Å–ø–∞–ª–µ–Ω
        areas=None
    )
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        async with DaftParser() as parser:
            properties = await parser.search_properties(filters)
            
            if properties:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(properties)} —Ä–µ–∞–ª—å–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π")
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                current_time = datetime.now().strftime('%H:%M')
                current_date = datetime.now().strftime('%d.%m.%Y')
                
                message = f"üè† *–†–ï–ê–õ–¨–ù–´–ï –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –î—É–±–ª–∏–Ω–µ* ({current_time})\n\n"
                message += f"üîç *–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞:*\n"
                message += f"üí∞ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: ‚Ç¨{filters.max_price:,}\n"
                message += f"üõèÔ∏è –ú–∏–Ω–∏–º—É–º —Å–ø–∞–ª–µ–Ω: {filters.min_bedrooms}\n"
                message += f"üìä –ù–∞–π–¥–µ–Ω–æ: {len(properties)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π\n\n"
                
                # –î–æ–±–∞–≤–ª—è–µ–º –ª—É—á—à–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
                message += "üìã *–õ—É—á—à–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:*\n\n"
                
                for i, prop in enumerate(properties[:6], 1):
                    message += f"*{i}. {prop.title}*\n"
                    message += f"üí∞ ‚Ç¨{prop.price:,}/month\n"
                    message += f"üìç {prop.address}\n"
                    message += f"üè† {prop.bedrooms} —Å–ø–∞–ª–µ–Ω, {prop.bathrooms} –≤–∞–Ω–Ω–∞—è\n"
                    message += f"üîó [–°–º–æ—Ç—Ä–µ—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ]({prop.url})\n\n"
                
                # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–µ
                message += f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
                message += f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {current_date} {current_time}\n"
                message += f"‚úÖ *–†–ï–ê–õ–¨–ù–´–ï –¥–∞–Ω–Ω—ã–µ —Å daft.ie*\n"
                message += f"üö´ *–ë–ï–ó —Ñ–∞–ª—å—à–∏–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö*\n"
                message += f"üîó *–í—Å–µ —Å—Å—ã–ª–∫–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –∏ —Ä–∞–±–æ—Ç–∞—é—Ç*\n"
                message += f"ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                await bot.send_message(
                    chat_id=chat_id,
                    text=message,
                    parse_mode="Markdown",
                    disable_web_page_preview=True
                )
                
                print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! {len(properties[:6])} –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∏–∑ {len(properties)} –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö")
                return True
                
            else:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á—Ç–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ—Ç
                message = f"‚ö†Ô∏è *–û–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã*\n\n"
                message += f"üîç –ò—Å–∫–∞–ª–∏: {filters.city}\n"
                message += f"üí∞ –ú–∞–∫—Å. —Ü–µ–Ω–∞: ‚Ç¨{filters.max_price:,}\n"
                message += f"üõèÔ∏è –ú–∏–Ω. —Å–ø–∞–ª–µ–Ω: {filters.min_bedrooms}\n"
                message += f"üïê –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M')}\n\n"
                message += f"üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞"
                
                await bot.send_message(
                    chat_id=chat_id,
                    text=message,
                    parse_mode="Markdown"
                )
                
                print("‚ö†Ô∏è –û–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
                return False
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        error_message = f"‚ùå *–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö*\n\n"
        error_message += f"üïê –í—Ä–µ–º—è: {datetime.now().strftime('%H:%M')}\n"
        error_message += f"‚ö†Ô∏è –ü—Ä–∏—á–∏–Ω–∞: {str(e)[:100]}...\n"
        error_message += f"üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç"
        
        await bot.send_message(
            chat_id=chat_id,
            text=error_message,
            parse_mode="Markdown"
        )
        return False
        
    finally:
        await bot.session.close()

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    success = asyncio.run(send_real_data_to_telegram())
    
    if success:
        print("\nüéâ –†–ï–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï –û–¢–ü–†–ê–í–õ–ï–ù–´ –í TELEGRAM!")
    else:
        print("\n‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π")
