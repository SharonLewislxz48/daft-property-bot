#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å –º—è–≥–∫–∏–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
"""
import asyncio
import sys
import os
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/home/barss/PycharmProjects/daftparser')

from parser.daft_parser import DaftParser
from parser.models import SearchFilters

async def test_with_soft_filters():
    print('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ú–Ø–ì–ö–ò–ú–ò —Ñ–∏–ª—å—Ç—Ä–∞–º–∏...')
    print('=' * 50)
    
    logging.basicConfig(level=logging.INFO)
    
    # –°–æ–∑–¥–∞—ë–º –±–æ–ª–µ–µ –º—è–≥–∫–∏–µ —Ñ–∏–ª—å—Ç—Ä—ã
    filters = SearchFilters(
        city='Dublin',
        max_price=4000,  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç —Ü–µ–Ω—ã
        min_bedrooms=1,  # –£–º–µ–Ω—å—à–∞–µ–º –º–∏–Ω–∏–º—É–º —Å–ø–∞–ª–µ–Ω
        areas=None
    )
    
    async with DaftParser() as parser:
        try:
            print(f"üîç –§–∏–ª—å—Ç—Ä—ã: max_price={filters.max_price}, min_bedrooms={filters.min_bedrooms}")
            
            properties = await parser.search_properties(filters)
            
            if properties:
                print(f'üéâ –£–°–ü–ï–•! –ù–∞–π–¥–µ–Ω–æ {len(properties)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π:')
                print()
                
                for i, prop in enumerate(properties[:5], 1):
                    print(f'{i}. üè† {prop.title}')
                    print(f'   üí∞ ‚Ç¨{prop.price:,}/month')
                    print(f'   üìç {prop.address}')
                    print(f'   üõèÔ∏è {prop.bedrooms} —Å–ø–∞–ª–µ–Ω')
                    print(f'   üîó {prop.url}')
                    print()
                
                # –¢–µ–ø–µ—Ä—å –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–µ–º —Å –±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
                print("\nüîß –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏: max_price=2500, min_bedrooms=3")
                
                strict_filters = SearchFilters(
                    city='Dublin',
                    max_price=2500,
                    min_bedrooms=3,
                    areas=None
                )
                
                strict_properties = await parser.search_properties(strict_filters)
                
                if strict_properties:
                    print(f'‚úÖ –° —Å—Ç—Ä–æ–≥–∏–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –Ω–∞–π–¥–µ–Ω–æ: {len(strict_properties)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π')
                    
                    for i, prop in enumerate(strict_properties[:3], 1):
                        print(f'  {i}. {prop.title} - ‚Ç¨{prop.price:,} - {prop.bedrooms} —Å–ø–∞–ª–µ–Ω')
                else:
                    print('‚ö†Ô∏è –° —Å—Ç—Ä–æ–≥–∏–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
                    print('üìä –ê–Ω–∞–ª–∏–∑ –≤—Å–µ—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π:')
                    
                    for prop in properties:
                        fits_price = prop.price <= 2500
                        fits_beds = prop.bedrooms >= 3
                        
                        print(f'  ‚Ä¢ {prop.title[:50]}...')
                        print(f'    –¶–µ–Ω–∞: ‚Ç¨{prop.price:,} {"‚úÖ" if fits_price else "‚ùå"} (–ª–∏–º–∏—Ç ‚Ç¨2500)')
                        print(f'    –°–ø–∞–ª—å–Ω–∏: {prop.bedrooms} {"‚úÖ" if fits_beds else "‚ùå"} (–º–∏–Ω. 3)')
                        print()
                
                return True
            else:
                print('‚ùå –î–∞–∂–µ —Å –º—è–≥–∫–∏–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
                return False
                
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
            import traceback
            traceback.print_exc()
            return False

if __name__ == "__main__":
    success = asyncio.run(test_with_soft_filters())
