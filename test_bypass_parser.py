#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
"""
import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('/home/barss/PycharmProjects/daftparser')

async def test_parser_direct():
    print('üîç –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ —Å –æ–±—Ö–æ–¥–æ–º –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏...')
    print('=' * 60)
    
    # –ü—Ä—è–º–æ–π –∏–º–ø–æ—Ä—Ç –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    from parser.final_daft_parser import FinalDaftParser
    
    parser = FinalDaftParser()
    
    try:
        properties = await parser.search_with_bypass("Dublin", 2500, 3)
        print(f'‚úÖ –£–°–ü–ï–•! –ù–∞–π–¥–µ–Ω–æ {len(properties)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π!')
        print()
        
        for i, prop in enumerate(properties[:5], 1):
            print(f'{i}. üè† {prop["title"]}')
            print(f'   üí∞ {prop["price"]}')
            print(f'   üìç {prop["address"]}')
            print(f'   üõèÔ∏è {prop.get("bedrooms", "?")} —Å–ø–∞–ª–µ–Ω')
            print(f'   üîó {prop["url"][:70]}...')
            print()
            
        return True
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
        import traceback
        traceback.print_exc()
        return False
        
    finally:
        await parser.close()

if __name__ == "__main__":
    success = asyncio.run(test_parser_direct())
    
    if success:
        print("üéâ –ü–ê–†–°–ï–† –° –û–ë–•–û–î–û–ú –ë–õ–û–ö–ò–†–û–í–ö–ò –†–ê–ë–û–¢–ê–ï–¢!")
        print("üìã –¢–µ–ø–µ—Ä—å –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ–º –µ–≥–æ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –±–æ—Ç...")
    else:
        print("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–∞—Ä—Å–µ—Ä–æ–º")
