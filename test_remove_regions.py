#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ–≥–∏–æ–Ω–æ–≤
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent))

from bot.enhanced_keyboards import get_user_regions_keyboard
from config.regions import ALL_LOCATIONS

def test_user_regions_keyboard():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ–≥–∏–æ–Ω–æ–≤"""
    print("üß™ –¢–ï–°–¢ –ö–õ–ê–í–ò–ê–¢–£–†–´ –£–î–ê–õ–ï–ù–ò–Ø –†–ï–ì–ò–û–ù–û–í")
    print("=" * 40)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Ä–µ–≥–∏–æ–Ω—ã
    test_regions = ["dublin-city", "cork", "galway"]
    
    print("–¢–µ—Å—Ç–æ–≤—ã–µ —Ä–µ–≥–∏–æ–Ω—ã:")
    for region in test_regions:
        name = ALL_LOCATIONS.get(region, region)
        print(f"  ‚Ä¢ {region} ‚Üí {name}")
    
    print("\n–°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É...")
    keyboard = get_user_regions_keyboard(test_regions)
    
    print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—è–¥–æ–≤: {len(keyboard.inline_keyboard)}")
    
    for i, row in enumerate(keyboard.inline_keyboard):
        print(f"–†—è–¥ {i + 1}:")
        for button in row:
            print(f"  - '{button.text}' ‚Üí {button.callback_data}")
    
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")

def test_all_locations():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º ALL_LOCATIONS"""
    print("\nüß™ –¢–ï–°–¢ ALL_LOCATIONS")
    print("=" * 40)
    
    print(f"–í—Å–µ–≥–æ —Ä–µ–≥–∏–æ–Ω–æ–≤: {len(ALL_LOCATIONS)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª—é—á–µ–π
    test_keys = ["dublin-city", "cork", "galway", "waterford", "limerick"]
    
    for key in test_keys:
        name = ALL_LOCATIONS.get(key, "–ù–ï –ù–ê–ô–î–ï–ù–û")
        status = "‚úÖ" if name != "–ù–ï –ù–ê–ô–î–ï–ù–û" else "‚ùå"
        print(f"  {status} {key} ‚Üí {name}")
    
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")

if __name__ == "__main__":
    test_all_locations()
    test_user_regions_keyboard()
