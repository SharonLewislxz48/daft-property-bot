#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å daft.ie
"""
import asyncio
import aiohttp

async def test_connection():
    print("üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å daft.ie...")
    
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36'
    }
    
    urls_to_test = [
        "https://www.daft.ie",
        "https://www.daft.ie/property-for-rent/dublin",
        "https://daft.ie",
    ]
    
    async with aiohttp.ClientSession(headers=headers, timeout=aiohttp.ClientTimeout(total=30)) as session:
        for url in urls_to_test:
            try:
                print(f"\nüîó –¢–µ—Å—Ç–∏—Ä—É–µ–º: {url}")
                
                async with session.get(url) as response:
                    print(f"üìä –°—Ç–∞—Ç—É—Å: {response.status}")
                    print(f"üåê URL –ø–æ—Å–ª–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤: {response.url}")
                    
                    if response.status == 200:
                        content = await response.text()
                        print(f"üìÑ –†–∞–∑–º–µ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {len(content)} —Å–∏–º–≤–æ–ª–æ–≤")
                        
                        if 'daft' in content.lower():
                            print("‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ daft.ie")
                        else:
                            print("‚ö†Ô∏è –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ daft.ie")
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞: {response.status}")
                        
            except asyncio.TimeoutError:
                print(f"‚è∞ –¢–∞–π–º–∞—É—Ç –¥–ª—è {url}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è {url}: {e}")

if __name__ == "__main__":
    asyncio.run(test_connection())
