#!/usr/bin/env python3
"""
–ü–æ–∏—Å–∫ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ daft.ie
"""

import asyncio
from parser.daft_parser import DaftParser
from parser.models import SearchFilters

async def search_for_user_property():
    """–ò—â–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–±—â–µ–º –ø–æ–∏—Å–∫–µ"""
    
    user_url = "http://www.daft.ie/for-rent/house-28-cabra-drive-dublin-7-north-circular-road-dublin-7/6193753"
    user_id = "6193753"  # ID –∏–∑ URL
    
    print("üîç –ò—â–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–±—â–µ–º –ø–æ–∏—Å–∫–µ –ø–æ –î—É–±–ª–∏–Ω—É")
    print(f"üéØ –¶–µ–ª–µ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ: {user_url}")
    print(f"üÜî ID: {user_id}")
    print("="*80)
    
    parser = DaftParser()
    
    # –ü–æ–∏—Å–∫ —Å –æ—á–µ–Ω—å –º—è–≥–∫–∏–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
    filters = SearchFilters(
        city="Dublin",
        max_price=10000,  # –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π –ª–∏–º–∏—Ç
        min_bedrooms=0    # –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
    )
    
    try:
        properties = await parser.search_properties(filters)
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(properties)} –æ–±—ä—è–≤–ª–µ–Ω–∏–π –≤—Å–µ–≥–æ")
        
        # –ò—â–µ–º –Ω–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ ID
        found_property = None
        for prop in properties:
            if user_id in prop.url:
                found_property = prop
                break
        
        if found_property:
            print(f"\nüéâ –ù–ê–ô–î–ï–ù–û! –û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ:")
            print(f"üìÑ –ù–∞–∑–≤–∞–Ω–∏–µ: {found_property.title}")
            print(f"üí∞ –¶–µ–Ω–∞: ‚Ç¨{found_property.price:,}/month")
            print(f"üõèÔ∏è –°–ø–∞–ª—å–Ω–∏: {found_property.bedrooms}")
            print(f"üöø –í–∞–Ω–Ω—ã–µ: {found_property.bathrooms}")
            print(f"üè† –¢–∏–ø: {found_property.property_type}")
            print(f"üìç –ê–¥—Ä–µ—Å: {found_property.address}")
            print(f"üîó URL: {found_property.url}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
            print(f"\nüéØ –ü–†–û–í–ï–†–ö–ê –§–ò–õ–¨–¢–†–û–í (3+ —Å–ø–∞–ª—å–Ω–∏, –¥–æ ‚Ç¨2500):")
            price_ok = found_property.price <= 2500
            bedrooms_ok = found_property.bedrooms >= 3
            
            print(f"üí∞ –¶–µ–Ω–∞ ‚Ç¨{found_property.price:,} <= ‚Ç¨2500? {'‚úÖ' if price_ok else '‚ùå'}")
            print(f"üõèÔ∏è –°–ø–∞–ª—å–Ω–∏ {found_property.bedrooms} >= 3? {'‚úÖ' if bedrooms_ok else '‚ùå'}")
            
            if price_ok and bedrooms_ok:
                print(f"\nüéâ –û–ë–™–Ø–í–õ–ï–ù–ò–ï –ü–û–õ–ù–û–°–¢–¨–Æ –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢ –§–ò–õ–¨–¢–†–ê–ú!")
                print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∞–≤ - —Ç–∞–∫–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—Ç!")
            else:
                print(f"\n‚ùå –û–±—ä—è–≤–ª–µ–Ω–∏–µ –ù–ï —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–¥–Ω–æ–º—É –∏–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤")
                if not bedrooms_ok:
                    print(f"   –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Å–ø–∞–ª–µ–Ω: {found_property.bedrooms} < 3")
                    print(f"   –í–æ–∑–º–æ–∂–Ω–æ, –ø–∞—Ä—Å–µ—Ä –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏–ª –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∞–ª–µ–Ω")
                
        else:
            print(f"\n‚ùå –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Å ID {user_id} –ù–ï –Ω–∞–π–¥–µ–Ω–æ –≤ —Ç–µ–∫—É—â–µ–º –ø–æ–∏—Å–∫–µ")
            print(f"   –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
            print(f"   ‚Ä¢ –û–±—ä—è–≤–ª–µ–Ω–∏–µ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ")
            print(f"   ‚Ä¢ –û–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–µ –∏–Ω–¥–µ–∫—Å–∏—Ä—É–µ—Ç—Å—è –≤ –æ–±—â–µ–º –ø–æ–∏—Å–∫–µ")
            print(f"   ‚Ä¢ –ù–∞—à –ø–∞—Ä—Å–µ—Ä –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —á–∞—Å—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–π")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–∏–º–µ—Ä–æ–≤ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
            print(f"\nüìã –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π:")
            for i, prop in enumerate(properties[:5], 1):
                print(f"{i}. {prop.title[:50]}... - ‚Ç¨{prop.price:,} - {prop.bedrooms} —Å–ø–∞–ª–µ–Ω")
                print(f"   üîó {prop.url}")
    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    await parser.close()

if __name__ == "__main__":
    asyncio.run(search_for_user_property())
