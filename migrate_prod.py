#!/usr/bin/env python3
import asyncio
import sys
import os
import aiosqlite

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

async def migrate_production_db():
    print("üîß –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –ø—Ä–æ–¥–∞–∫—à–µ–Ω –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        async with aiosqlite.connect('data/enhanced_bot.db') as db:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª–µ chat_id
            async with db.execute("PRAGMA table_info(user_settings)") as cursor:
                columns = await cursor.fetchall()
                column_names = [col[1] for col in columns]
                
            if 'chat_id' not in column_names:
                print("üìù –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ chat_id –≤ —Ç–∞–±–ª–∏—Ü—É user_settings...")
                
                # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ chat_id
                await db.execute("ALTER TABLE user_settings ADD COLUMN chat_id INTEGER")
                await db.commit()
                print("‚úÖ –ü–æ–ª–µ chat_id –¥–æ–±–∞–≤–ª–µ–Ω–æ")
                
                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º chat_id = user_id –¥–ª—è –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                await db.execute("UPDATE user_settings SET chat_id = user_id WHERE chat_id IS NULL")
                affected_rows = db.total_changes
                await db.commit()
                print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {affected_rows} –∑–∞–ø–∏—Å–µ–π: chat_id = user_id")
                
                # –ï—Å–ª–∏ –µ—Å—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –ø–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É,
                # –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –µ–≥–æ chat_id –≤—Ä—É—á–Ω—É—é:
                target_group_id = -1002819366953
                user_id = 1665845754
                
                await db.execute(
                    "UPDATE user_settings SET chat_id = ? WHERE user_id = ?",
                    (target_group_id, user_id)
                )
                await db.commit()
                print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Ç–µ–ø–µ—Ä—å –ø–æ–ª—É—á–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É {target_group_id}")
                
            else:
                print("‚ÑπÔ∏è  –ü–æ–ª–µ chat_id —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –º–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
                
                # –í—Å–µ —Ä–∞–≤–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏–º –∏ –æ–±–Ω–æ–≤–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≥—Ä—É–ø–ø—ã
                target_group_id = -1002819366953
                user_id = 1665845754
                
                await db.execute(
                    "UPDATE user_settings SET chat_id = ? WHERE user_id = ?",
                    (target_group_id, user_id)
                )
                await db.commit()
                print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∞ –≥—Ä—É–ø–ø—É {target_group_id}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            async with db.execute("SELECT user_id, chat_id FROM user_settings") as cursor:
                all_users = await cursor.fetchall()
                
                print(f"\nüìä –ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ({len(all_users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π):")
                for user_data in all_users:
                    user_id, chat_id = user_data
                    chat_type = "–≥—Ä—É–ø–ø–∞" if chat_id < 0 else "–õ–°"
                    print(f"   user_id: {user_id}, chat_id: {chat_id} ({chat_type})")
                    
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(migrate_production_db())
