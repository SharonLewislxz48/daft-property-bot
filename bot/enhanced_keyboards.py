#!/usr/bin/env python3
"""
–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏
"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List, Dict
import math

from config.regions import (
    DUBLIN_REGIONS, MAIN_CITIES, COUNTIES, ALL_LOCATIONS, 
    REGION_CATEGORIES, POPULAR_COMBINATIONS
)


def get_main_menu_keyboard() -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    keyboard = [
        [
            InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings"),
            InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="statistics")
        ],
        [
            InlineKeyboardButton(text="‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥", callback_data="start_monitoring"),
            InlineKeyboardButton(text="‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥", callback_data="stop_monitoring")
        ],
        [
            InlineKeyboardButton(text="üîç –†–∞–∑–æ–≤—ã–π –ø–æ–∏—Å–∫", callback_data="single_search"),
            InlineKeyboardButton(text="‚ùì –ü–æ–º–æ—â—å", callback_data="help")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_settings_menu_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    keyboard = [
        [
            InlineKeyboardButton(text="üèòÔ∏è –†–µ–≥–∏–æ–Ω—ã –ø–æ–∏—Å–∫–∞", callback_data="manage_regions"),
            InlineKeyboardButton(text="üõèÔ∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∞–ª–µ–Ω", callback_data="set_bedrooms")
        ],
        [
            InlineKeyboardButton(text="üí∞ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞", callback_data="set_max_price"),
            InlineKeyboardButton(text="‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞", callback_data="set_interval")
        ],
        [
            InlineKeyboardButton(text="üìã –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="show_settings"),
            InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_regions_menu_keyboard() -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–≥–∏–æ–Ω–∞–º–∏"""
    keyboard = [
        [
            InlineKeyboardButton(text="üëÄ –ú–æ–∏ —Ä–µ–≥–∏–æ–Ω—ã", callback_data="show_regions"),
            InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–≥–∏–æ–Ω", callback_data="add_region")
        ],
        [
            InlineKeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å —Ä–µ–≥–∏–æ–Ω", callback_data="remove_region"),
            InlineKeyboardButton(text="üìã –í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã", callback_data="list_all_regions")
        ],
        [
            InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings"),
            InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_add_region_categories_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–µ–≥–∏–æ–Ω–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è"""
    keyboard = [
        [
            InlineKeyboardButton(text="üèôÔ∏è –†–∞–π–æ–Ω—ã –î—É–±–ª–∏–Ω–∞ (62)", callback_data="category_dublin_areas"),
            InlineKeyboardButton(text="üåÜ –û—Å–Ω–æ–≤–Ω—ã–µ –≥–æ—Ä–æ–¥–∞ (6)", callback_data="category_main_cities")
        ],
        [
            InlineKeyboardButton(text="üó∫Ô∏è –ì—Ä–∞—Ñ—Å—Ç–≤–∞ –ò—Ä–ª–∞–Ω–¥–∏–∏ (26)", callback_data="category_republic_counties"),
            InlineKeyboardButton(text="üè¥Û†ÅßÛ†Å¢Û†Å≥Û†Å£Û†Å¥Û†Åø –°–µ–≤. –ò—Ä–ª–∞–Ω–¥–∏—è (6)", callback_data="category_northern_counties")
        ],
        [
            InlineKeyboardButton(text="‚≠ê –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏", callback_data="category_popular"),
            InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é", callback_data="search_region")
        ],
        [
            InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ —Ä–µ–≥–∏–æ–Ω–∞–º", callback_data="manage_regions"),
            InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_region_categories_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–µ–≥–∏–æ–Ω–æ–≤ - –∞–ª–∏–∞—Å –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏"""
    return get_add_region_categories_keyboard()


def get_category_regions_keyboard(category: str, page: int = 0) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ–≥–∏–æ–Ω–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    regions_per_page = 8
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–≥–∏–æ–Ω—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if category == "dublin_areas":
        regions = DUBLIN_REGIONS
        title = "üèôÔ∏è –†–∞–π–æ–Ω—ã –î—É–±–ª–∏–Ω–∞"
    elif category == "main_cities":
        regions = MAIN_CITIES
        title = "üåÜ –û—Å–Ω–æ–≤–Ω—ã–µ –≥–æ—Ä–æ–¥–∞"
    elif category == "republic_counties":
        regions = REGION_CATEGORIES["republic_of_ireland"]
        title = "üó∫Ô∏è –ì—Ä–∞—Ñ—Å—Ç–≤–∞ –ò—Ä–ª–∞–Ω–¥–∏–∏"
    elif category == "northern_counties":
        regions = REGION_CATEGORIES["northern_ireland"]
        title = "üè¥Û†ÅßÛ†Å¢Û†Å≥Û†Å£Û†Å¥Û†Åø –°–µ–≤–µ—Ä–Ω–∞—è –ò—Ä–ª–∞–Ω–¥–∏—è"
    elif category == "popular":
        # –î–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π —Å–æ–∑–¥–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        return get_popular_combinations_keyboard()
    else:
        regions = ALL_LOCATIONS
        title = "üåç –í—Å–µ —Ä–µ–≥–∏–æ–Ω—ã"
    
    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è
    region_items = list(regions.items())
    total_pages = math.ceil(len(region_items) / regions_per_page)
    start_idx = page * regions_per_page
    end_idx = start_idx + regions_per_page
    page_regions = region_items[start_idx:end_idx]
    
    keyboard = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ä–µ–≥–∏–æ–Ω–æ–≤ (–ø–æ 2 –≤ —Ä—è–¥)
    for i in range(0, len(page_regions), 2):
        row = []
        for j in range(2):
            if i + j < len(page_regions):
                region_key, region_name = page_regions[i + j]
                # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è
                display_name = region_name[:20] + "..." if len(region_name) > 20 else region_name
                row.append(InlineKeyboardButton(
                    text=display_name,
                    callback_data=f"select_region_{region_key}"
                ))
        keyboard.append(row)
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
    if total_pages > 1:
        nav_row = []
        if page > 0:
            nav_row.append(InlineKeyboardButton(
                text="‚¨ÖÔ∏è",
                callback_data=f"category_page_{category}_{page-1}"
            ))
        
        nav_row.append(InlineKeyboardButton(
            text=f"{page + 1}/{total_pages}",
            callback_data="noop"
        ))
        
        if page < total_pages - 1:
            nav_row.append(InlineKeyboardButton(
                text="‚û°Ô∏è",
                callback_data=f"category_page_{category}_{page+1}"
            ))
        
        keyboard.append(nav_row)
    
    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    keyboard.append([
        InlineKeyboardButton(text="üîô –ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", callback_data="manage_regions"),
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_popular_combinations_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π"""
    keyboard = []
    
    for combo_key, regions in POPULAR_COMBINATIONS.items():
        # –ö—Ä–∞—Å–∏–≤—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è –∫–æ–º–±–∏–Ω–∞—Ü–∏–π
        combo_names = {
            "dublin_central": "üèõÔ∏è –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –î—É–±–ª–∏–Ω",
            "dublin_south": "üå≥ –Æ–∂–Ω—ã–π –î—É–±–ª–∏–Ω", 
            "dublin_north": "üè¢ –°–µ–≤–µ—Ä–Ω—ã–π –î—É–±–ª–∏–Ω",
            "dublin_west": "üèòÔ∏è –ó–∞–ø–∞–¥–Ω—ã–π –î—É–±–ª–∏–Ω",
            "major_cities": "üåÜ –ö—Ä—É–ø–Ω—ã–µ –≥–æ—Ä–æ–¥–∞",
            "student_areas": "üéì –°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–µ —Ä–∞–π–æ–Ω—ã"
        }
        
        display_name = combo_names.get(combo_key, combo_key.replace("_", " ").title())
        keyboard.append([InlineKeyboardButton(
            text=f"{display_name} ({len(regions)})",
            callback_data=f"select_combo_{combo_key}"
        )])
    
    keyboard.append([
        InlineKeyboardButton(text="üîô –ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", callback_data="manage_regions"),
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_user_regions_keyboard(user_regions: List[str]) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ä–µ–≥–∏–æ–Ω–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"""
    keyboard = []
    
    for region_key in user_regions:
        region_name = ALL_LOCATIONS.get(region_key, region_key)
        keyboard.append([
            InlineKeyboardButton(
                text=f"‚ùå {region_name}",
                callback_data=f"remove_region_{region_key}"
            )
        ])
    
    keyboard.append([
        InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="manage_regions"),
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_bedrooms_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ø–∞–ª–µ–Ω"""
    keyboard = []
    
    # –†—è–¥—ã –ø–æ 3 –∫–Ω–æ–ø–∫–∏
    for i in range(0, 11, 3):
        row = []
        for j in range(i, min(i + 3, 11)):
            if j == 0:
                text = "–°—Ç—É–¥–∏—è"
            else:
                text = f"{j} —Å–ø–∞–ª–µ–Ω" if j > 1 else "1 —Å–ø–∞–ª—å–Ω—è"
            row.append(InlineKeyboardButton(text=text, callback_data=f"bedrooms_{j}"))
        keyboard.append(row)
    
    keyboard.append([
        InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings"),
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_price_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã"""
    prices = [1000, 1500, 2000, 2500, 3000, 3500, 4000, 5000, 7500, 10000]
    
    keyboard = []
    
    # –†—è–¥—ã –ø–æ 2 –∫–Ω–æ–ø–∫–∏
    for i in range(0, len(prices), 2):
        row = []
        for j in range(i, min(i + 2, len(prices))):
            price = prices[j]
            row.append(InlineKeyboardButton(text=f"‚Ç¨{price}", callback_data=f"price_{price}"))
        keyboard.append(row)
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Å–≤–æ–µ–π —Ü–µ–Ω—ã
    keyboard.append([
        InlineKeyboardButton(text="‚úèÔ∏è –£–∫–∞–∑–∞—Ç—å —Å–≤–æ—é —Ü–µ–Ω—É", callback_data="custom_price")
    ])
    
    keyboard.append([
        InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings"),
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_interval_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    intervals = [
        (300, "5 –º–∏–Ω—É—Ç"),
        (600, "10 –º–∏–Ω—É—Ç"),
        (1800, "30 –º–∏–Ω—É—Ç"),
        (3600, "1 —á–∞—Å"),
        (7200, "2 —á–∞—Å–∞"),
        (10800, "3 —á–∞—Å–∞"),
        (21600, "6 —á–∞—Å–æ–≤"),
        (43200, "12 —á–∞—Å–æ–≤"),
        (86400, "24 —á–∞—Å–∞")
    ]
    
    keyboard = []
    
    for interval_seconds, interval_text in intervals:
        keyboard.append([
            InlineKeyboardButton(
                text=interval_text,
                callback_data=f"interval_{interval_seconds}"
            )
        ])
    
    keyboard.append([
        InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="settings"),
        InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_confirmation_keyboard(action: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"""
    keyboard = [
        [
            InlineKeyboardButton(text="‚úÖ –î–∞", callback_data=f"confirm_{action}"),
            InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data=f"cancel_{action}")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_back_to_main_keyboard() -> InlineKeyboardMarkup:
    """–ü—Ä–æ—Å—Ç–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    keyboard = [
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def get_statistics_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    keyboard = [
        [
            InlineKeyboardButton(text="üìä –ó–∞ –Ω–µ–¥–µ–ª—é", callback_data="stats_7"),
            InlineKeyboardButton(text="üìä –ó–∞ –º–µ—Å—è—Ü", callback_data="stats_30")
        ],
        [
            InlineKeyboardButton(text="üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–∏—Å–∫–∏", callback_data="recent_searches"),
            InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="statistics")
        ],
        [
            InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)
